kbd::before {
    content: "(";
}

kbd::after {
    content: ")";
}

kbd {
    margin-left: 1ex;
}

main {
    height: 100vh;
}

section#program-source {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;
    height: 100%;
    padding: 1ex;
    box-sizing: border-box;
}

section#program-source>div {
    flex-grow: 1;
    overflow-y: auto;
}

body {
    margin: 0;
    padding: 0;
}

main {
    display: flex;
    flex-direction: row;
}

nav {
    padding-left: 1ex;
}

div#split {
    background-color: gray;
    width: 1ex;
    height: 100%;
    cursor: col-resize;
    flex-grow: 0;
    flex-shrink: 0;
}

section#stacker {
    flex-grow: 1;
    overflow-y: auto;
}

section#stacker>article>section {
    padding-left: 1ex;
    padding-right: 1ex;
}

menu {
    display: inline-flex;
    flex-wrap: wrap;
    flex-direction: row;
    padding: 0;
    margin: 0;
}

menu>li {
    display: block;
    padding: 0;
    margin: 0;
}

menu>li:not(:first-child) {
    margin-left: 1ex;
}

section#stacker {
    display: flex;
    flex-direction: column;
    padding: 1ex;
}

section#stacker>article#stacker-configuration {
    display: grid;
    grid-template-columns: max-content max-content max-content;
}
section#stdout {
    grid-column: 1 / 4;
}

#row {
    display: flex;
    flex-direction: row;
}

code.blank {
    display: inline-flex;
    white-space: pre-wrap;
    color: black;
}

code.blank {
    background-color: white;
}
code.blank.marked {
    background-color: yellow;
}
.now.calling {
    color: rgb(0, 0, 0);
    background-color: rgb(255, 187, 0);
}

.now.called {
    color: rgb(255, 255, 255);
    background-color: rgb(0, 0, 200);
}

.now.returning {
    color: rgb(255, 255, 255);
    background-color: rgb(0, 0, 200);
}
.now.replacing {
    color: rgb(255, 255, 255);
    background-color: rgb(0, 0, 200);
}

.now.printing {
    color: rgb(255, 255, 255);
    background-color: rgb(0, 0, 200);
}

.now.looping {
    color: rgb(255, 255, 255);
    background-color: rgb(0, 0, 200);
}

.now.terminated {
    color: rgb(255, 255, 255);
    background-color: rgb(0, 0, 0);
}

.now.errored {
    color: rgb(0, 0, 0);
    background-color: rgb(255, 127, 121);
}

/* stdout */

pre.stdout {
    /* color: white;
    background-color: black; */
}

/* All three columns have margins. */
.column {
    margin-left: 1em;
    margin-right: 1em;
}

.env-frame {
    color: black;
    background-color: rgb(65, 188, 118)
}

.stack-frame {
    color: rgb(0, 0, 0);
    background-color: rgb(255, 187, 0);
}

.fun {
    color: rgb(0, 0, 0);
    background-color: rgb(193, 225, 151);

}

.vec {
    color: rgb(255, 255, 255);
    background-color: rgb(100, 100, 100);

}

.box>p {
    margin-top: 0.5ex;
    margin-bottom: 0.5ex;
}

.binds {
    display: inline-flex;
    flex-direction: column;
}

ol.box-list {
    display: flex;
    flex-direction: column;
    padding: 0;
    margin: 0;
}

ol.box-list>li,
.box {
    display: block;
    padding: 1em;
    border-radius: 1ex;
}

.box {
    width: max-content;
}

.stack-frame.box {
    width: unset;
}

ol.box-list>li:not(:first-of-type),
.box:not(:first-of-type) {
    margin-top: 1ex;
}

/* except for stack-frames */
ol.box-list>li.stack-frame,
.box.stack-frame {
    border-radius: 0;
}

ol.box-list>li.stack-frame,
.box.stack-frame {
    margin-top: 0;
    border-top: 1px solid black;
}

/* the stack wrap boxes in a black box */
ol.box-list.the-stack {
    background-color: black;
    padding: 1ex;
    width: max-content;
}

.parse-feedback {
    color: red;
}

/* Screen Reader - ONLY */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

details>summary~* {
    margin-bottom: 0.5ex;
}

#stacker-configuration>section>h1 {
    margin-bottom: 1ex;
}

/* having a border looks dumb but slightly more readable I (KC) think */
.box {
    border: 1px solid black;
}


/* highlight.js */
.highlight {
    outline: 1ex solid red;
}

.ref, .def {
    /* font-weight: bold;
    color: grey; */
}

#program-source {
    width: 35vw;
}