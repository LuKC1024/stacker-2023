// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Smol from "./smol.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Render from "./render.bs.js";
import * as S_expr from "./s_expr.bs.js";
import * as Stacker from "./Stacker.bs.js";
import * as CodeEditor from "./CodeEditor.bs.js";
import * as Parse_smol from "./parse_smol.bs.js";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";

var Impossible = /* @__PURE__ */Caml_exceptions.create("Main.Impossible");

function Main(props) {
  var match = React.useState(function () {
        return "";
      });
  var program = match[0];
  var match$1 = React.useState(function () {
        return /* Editing */0;
      });
  var setState = match$1[1];
  var state = match$1[0];
  var onRunClick = function (_evt) {
    Curry._1(setState, (function (param) {
            return /* Running */{
                    _0: Smol.load(Parse_smol.terms_of_sexprs(S_expr.parse_many(S_expr.stringToSource(program))))
                  };
          }));
  };
  var onStopClick = function (_evt) {
    Curry._1(setState, (function (param) {
            return /* Editing */0;
          }));
  };
  var onPrevClick = function (_evt) {
    
  };
  var onNextClick = function (_evt) {
    Curry._1(setState, (function (s) {
            if (s) {
              var _s = s._0;
              if (_s.TAG !== /* Terminated */0) {
                return /* Running */{
                        _0: Smol.transition(_s._0)
                      };
              }
              throw {
                    RE_EXN_ID: Impossible,
                    Error: new Error()
                  };
            }
            throw {
                  RE_EXN_ID: Impossible,
                  Error: new Error()
                };
          }));
  };
  return React.createElement("div", {
              id: "main"
            }, React.createElement("div", undefined, React.createElement("button", {
                      disabled: state !== /* Editing */0,
                      onClick: onRunClick
                    }, "Run"), React.createElement("button", {
                      disabled: state === /* Editing */0,
                      onClick: onStopClick
                    }, "Stop"), React.createElement("button", {
                      disabled: state === /* Editing */0,
                      onClick: onPrevClick
                    }, "Prev"), React.createElement("button", {
                      disabled: state === /* Editing */0,
                      onClick: onNextClick
                    }, "Next")), React.createElement("div", {
                  id: "row"
                }, React.createElement("div", {
                      id: "program-source"
                    }, React.createElement(CodeEditor.make, {
                          program: program,
                          setProgram: match[1],
                          editable: state === /* Editing */0
                        })), React.createElement("div", {
                      id: "stacker"
                    }, React.createElement(Stacker.make, {
                          program: program
                        }))), React.createElement("div", undefined, state ? Render.render(state._0) : "Click run to start tracing"));
}

var make = Main;

export {
  Impossible ,
  make ,
}
/* react Not a pure module */
